<html>
    <head>
        <title> lab 01</title>
        </head>

        <body>
            <script type="text/javascript">







                //---------------Question 01--------------


                // with return state..

               var hello = function(){
                    return function () {
                        console.log("hello world");
                    }
                }

                function hello1(fun) {

                      var exec = fun();
                      exec();

                   }

                hello1(hello);


               // or this way also can do without return


                   var hello2 = function(){

                           console.log("hello world");

                   }


                     var hello3= function (fun) {


                          fun();

                    }

                hello3(hello2);


 

                   var obj = {

                       name:"roy",
                       age:21
                   }
                   console.log(obj.age);

                   console.log(obj.name);












              //---------------Question 02--------------

             
                var try2= {

                    name: 'd.iman',
                    role: 'musician',

                    printDetails :function () {
                        console.log(this.name);
                        console.log(this.role);
                    }
                }

                try2.printDetails();














                //---------------Question 03--------------

                //a. Declare a global variable named vehicleName in the window object.
                var vehiclename= 'audi';

                //b. Declare a method named printVehicleName to print out the vehicle name.
                function printvehiclename() {

                    console.log(this.vehiclename)
                    
                }

                printvehiclename();

            
                var Flight={
                    vehiclename: 'Airbus',
                    printname: printvehiclename
                }
                Flight.printname();


              

                var car={
                        vehiclename:'Nissan',
                        printname: function () {
                            return function (){
                                console.log(this.vehiclename)
                            }
                        }
                }
                var execute =car.printname();
                execute();  // audi only will be printed, nissan wont print..since 'this' key word refers to audi ...

                //if we want Nissan to be the output then we need to use the key word called 'bind'

                var execute =car.printname();
                execute = execute.bind(car);
                execute(); // this time nissan will be the output since we used bind key word,and  we pass the
                             // function car as the parameter for bind

















                //---------------Question 04--------------

                //4. Create a separate function using JavaScript closure which accepts the tax percentage and
                // returns a function that accepts the amount and returns the amount after adding tax percentage.
                // Try adding tax percentage to ‘this’ object and check if it works.

                function taxCalc(percentage){
                    return function (amt){
                        return amt*percentage;

                    }
                }

                var cal=taxCalc(0.12);
                console.log(cal(200));  //interview intermediate  question


                // whats happening in above code?
                // ** the nested function is accesing the outside function ... i.e the internal
                // function accessing the parent function variable,argument and all this is called closure










                //---------------Question 05--------------


               // 5. Write a function to call JSON Placeholder API
               // (https://jsonplaceholder.typicode.com/posts)
                // and get users and return the users to the caller.


                fetch('https://jsonplaceholder.typicode.com/posts').then(function (response){

                    return response.json();
                }).then(function (data){
                    console.log(data);
                })

                console.log('here: ') // this here will be printed before the fetch data
                                      // and its the nature of this , its  becomes assynchronization msg





</script>


        </body>
</html>